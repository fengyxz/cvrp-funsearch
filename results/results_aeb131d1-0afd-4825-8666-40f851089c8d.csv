dataset,sample_id,response,is_success,total_distance,run_time,routes,timestamp
A-n32-k5,0,"Here's the improved `construction_heuristic` function that handles the CVRP more effectively:

```python
@funsearch.evolve
def construction_heuristic(context: ConstructionContext) -> bool:
    """"""Improved construction heuristic for CVRP.""""""
    # Calculate distance from depot to candidate
    depot_loc = np.array(context.locations[context.depot])
    candidate_loc = np.array(context.locations[context.candidate])
    distance = np.linalg.norm(depot_loc - candidate_loc)
    
    # Check capacity constraint
    if context.vehicle_load + context.demand > context.vehicle_capacity:
        return False
    
    # Prefer closer locations with higher demand-to-distance ratio
    if distance == 0:  # Avoid division by zero
        return False
        
    demand_ratio = context.demand / distance
    threshold = np.median([d / np.linalg.norm(depot_loc - np.array(loc)) 
                         for i, loc in enumerate(context.locations) 
                         if i != context.depot])
    
    return demand_ratio >= threshold and distance <= np.percentile(
        [np.linalg.norm(depot_loc - np.array(loc)) 
         for loc in context.locations if loc != context.locations[context.depot]], 75)
```",False,N/A,1.8672330379486084,[],2025-04-10 23:37:25
