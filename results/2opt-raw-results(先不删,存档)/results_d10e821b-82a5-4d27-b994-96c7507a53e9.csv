dataset,sample_id,response,is_success,total_distance,run_time,routes,timestamp
A-n32-k5,0,"```python
@funsearch.evolve
def construction_heuristic(ctx: ConstructionContext) -> float:
    # Enhanced heuristic combining distance and capacity utilization
    distance_weight = 1.0
    utilization_weight = 0.5
    
    normalized_distance = ctx.distance / ctx.vehicle_capacity
    utilization_score = (ctx.vehicle_load + ctx.demand) / ctx.vehicle_capacity
    
    return distance_weight * normalized_distance - utilization_weight * utilization_score
```",True,1065.1870862702688,1.876554012298584,"[[0, 30, 16, 12, 1, 7, 26, 14, 5, 0], [0, 20, 25, 10, 29, 22, 8, 18, 24, 27, 0], [0, 6, 3, 17, 19, 31, 21, 13, 0], [0, 2, 23, 28, 4, 11, 9, 0], [0, 15, 0]]",2025-04-10 21:12:53
A-n32-k5,1,"```python
@funsearch.evolve
def construction_heuristic(ctx: ConstructionContext) -> float:
    # Enhanced heuristic combining distance and demand ratio
    distance_weight = 1.0
    demand_weight = 0.3
    
    # Normalize components and combine with weights
    normalized_distance = ctx.distance / np.max(ctx.locations)
    normalized_demand = ctx.demand / ctx.vehicle_capacity
    
    return distance_weight * normalized_distance + demand_weight * normalized_demand
```",True,1160.1401126287265,1.7952311038970947,"[[0, 30, 26, 16, 12, 1, 7, 18, 22, 29, 14, 0], [0, 20, 5, 25, 10, 8, 24, 27, 0], [0, 6, 3, 2, 23, 28, 4, 11, 0], [0, 13, 21, 31, 19, 17, 9, 0], [0, 15, 0]]",2025-04-10 21:12:55
A-n32-k5,2,"Here's the improved `construction_heuristic` function:

```python
@funsearch.evolve
def construction_heuristic(ctx: ConstructionContext) -> float:
    # Combined heuristic considering distance, demand and capacity utilization
    distance_weight = 1.0
    demand_weight = 0.2
    utilization_weight = 0.3
    
    normalized_distance = ctx.distance / np.max(ctx.locations)
    normalized_demand = ctx.demand / ctx.vehicle_capacity
    utilization_ratio = (ctx.vehicle_load + ctx.demand) / ctx.vehicle_capacity
    
    return (distance_weight * normalized_distance + 
            demand_weight * normalized_demand - 
            utilization_weight * utilization_ratio)
```",True,1118.2647889064563,1.8014850616455078,"[[0, 30, 26, 16, 12, 1, 7, 18, 22, 29, 14, 0], [0, 20, 5, 25, 10, 8, 24, 27, 0], [0, 13, 21, 31, 19, 17, 3, 23, 0], [0, 6, 2, 28, 4, 11, 9, 0], [0, 15, 0]]",2025-04-10 21:12:57
